import { httpNode } from '../instance';

export interface ItemDocument {
  title: string;
  filename: string;
  link: string;
}
export interface CourseTranslation {
  courseManagement?: ItemDocument[];
  courseFormats?: ItemDocument[];
  supportAndAdvices: ItemDocument[];
  suppliers: ItemDocument[];
  id: number;
  courseId: number;
  locale: string;
  name: string;
  slug: string;
  title: string;
  description: string;
  about: string;
  support: string;
}

export interface PhasesTranslation {
  id: number;
  phaseId: number;
  locale: string;
  name: string;
  slug: string;
  title: string;
  description?: string;
  video?: string;
  titlePiece?: string;
}

export interface AccountPhasesModel {
  id: number;
  accountId: number;
  phaseId: number;
  startDate: string;
  endDate: string;
  startDateOfAssessment: string;
  endDateOfAssessment?: string;
  createdAt: string;
  updatedAt: string;
}

export interface Account {
  id: number;
  AccountPhasesModel: AccountPhasesModel;
}

export interface Phase {
  id: number;
  courseId: number;
  image: string;
  active: number;
  startDate: string;
  endDate: string;
  duration: number;
  displayOrder: number;
  createdAt: string;
  updatedAt: string;
  phasesTranslations: PhasesTranslation[];
  accounts: Account[];
}
export interface AccountCoursesModel {
  id: number;
  accountId: number;
  expertId: number;
  courseId: number;
  status: number;
  total: number;
  comment: string;
  participantCommentDate: string;
  expertComment: string;
  expertCommentDate: string;
  accept: number;
  createdAt: string;
  updatedAt: string;
}

export interface AccountCourse {
  id: number;
  AccountCoursesModel: AccountCoursesModel;
}

export interface DataDetailtCourse {
  id: number;
  image: string;
  active: number;
  isHomepage: number;
  displayOrder: number;
  createdAt: string;
  updatedAt: string;
  startDate: string;
  endDate: string;
  courseTranslations: CourseTranslation[];
  phases: Phase[];
  accounts: AccountCourse[];
}

export const getListCourse = async (): Promise<DataDetailtCourse[]> => {
  const response = await httpNode.get('course/homepages');
  return response.data.data;
};

export const getDetailCourseSlug = async (slug: string): Promise<DataDetailtCourse> => {
  const response = await httpNode.get(`/course/${slug}/homepages`);
  return response.data.data;
};
