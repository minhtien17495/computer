/* eslint-disable no-param-reassign */
import React from "react";

import mapModifiers from "utils/functions";

type TabModifiers= "multiple"|"widthAuto";
interface TabProps {
  listTitle: {
    title: string;
    key: number;
  }[];
  keyActive: number;
  handleSelect?: (key: number) => void;
  modifiers?:TabModifiers[];
}

interface TabPaneProps {
  active?: boolean;
}

export const TabPane: React.FC<TabPaneProps> = ({
  active,
  children,
}) => (
  <div className={mapModifiers("o-tab_pane", active && "active")}>
    {children}
  </div>
);

const Tab: React.FC<TabProps> = ({
  listTitle,
  keyActive,
  children,
  modifiers,
  handleSelect,
}) => (
  <div className={mapModifiers("o-tab", modifiers)}>
    <div className="o-tab_heads">
      {
        listTitle.map((item, index) => (
          <div
            key={`title-${index.toString()}`}
            className={mapModifiers("o-tab_title", keyActive === item.key && "active")}
          >
            <button
              onClick={() => handleSelect && handleSelect(item.key)}
              className="o-tab_title_btn"
            >
              {item.title}
            </button>
          </div>
        ))
      }
    </div>
    <div className="o-tab_content">
      {children}
    </div>
  </div>
);

export default Tab;



.o-tab {
  max-width: rem(754);
  width: 100%;

  &-multiple{
    .o-tab_heads{
      overflow: auto;
    }
    .o-tab_title{
      min-width: rem(200);
      &::after{
        display: none;
      }
    }
  }

  &_heads {
    display: flex;
  }

  &_title {
    position: relative;
    flex: 1;
    background-color: $snow;
    overflow: hidden;
    border-radius: rem(4) rem(4) 0 0;
    transition: all 0.3s ease;
    
    &::after { 
      content: "";
      position: absolute;
      bottom: 0;
      left: 0;
      right: 0;
      top: rem(3);
      z-index: 2;
      background-color: $snow;
      transition: background-color 0.3s ease;
    }
    &::before {
      content: "";
      position: absolute;
      top: 0;
      right: 0;
      left: 50%;
      height: rem(3);
      width: 0;
      background-color: $raisinBlack;
      transform: translateX(-50%);
      transition: all 0.3s ease-in-out;
    }
   
    &-active {
      background-color: $white;
      box-shadow: 0 0 rem(10) $black015;
      position: relative;
      .o-tab_title_btn{
        color: $raisinBlack;
      }
      &::before {
        width: 100%;
      }
      &::after {
        background-color: $white;
      }
    }

    &_btn{
      -webkit-tap-highlight-color: transparent;   
      -webkit-appearance: none;
      outline: none;
      border: none;
      box-shadow: none;
      background: none;
      text-align: center;
      width: 100%;
      padding-top: rem(20);
      padding-bottom: rem(21);
      line-height: rem(32);
      font-size: rem(20);
      color: $silverChalice;
      position: relative;
      z-index: 3;
      transition: all 0.3s ease;
      @include small-mobile{
        padding-top: rem(12);
        padding-bottom: rem(12);
      }
    }
  }

  &_content {
    box-shadow: 0 0 rem(10) $black015;
    background-color: $white;
    padding: rem(42) rem(68) rem(68);
    position: relative;
    @include small-mobile {
      padding: rem(30) rem(20);
    }
  }

  &_pane {
    display: none;
    &-active {
      display: block;
    }
  }
}

