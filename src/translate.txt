/* eslint-disable @typescript-eslint/camelcase */
import React, { useState } from 'react';
import { useTranslation } from 'react-i18next';


import { cmsHttp } from 'apis/instance';
import Image from 'components/atoms/Image';
import Link from 'components/atoms/Link';
import List from 'components/molecules/List';
import { SystemResponse } from 'reducers/system/types';
import useSelector from 'selectors/useSelector';

type ChildFooterProps={
  data: SystemResponse;
}

const ListSocial: React.FC<ChildFooterProps> = ({
  data,
}) => {
  const [hoveredInstagram, setHoveredInstagram] = useState(false);
  const toggleHoverInstagram = (): void => setHoveredInstagram(!hoveredInstagram);
  const [hoveredPinterest, setHoveredPinterest] = useState(false);
  const toggleHoverPinterest = (): void => setHoveredPinterest(!hoveredPinterest);
  const [hoveredTwitter, setHoveredTwitter] = useState(false);
  const toggleHoverTwitter = (): void => setHoveredTwitter(!hoveredTwitter);
  const [hoveredFacebook, setHoveredFacebook] = useState(false);
  const toggleHoverFacebook = (): void => setHoveredFacebook(!hoveredFacebook);

  const checkLink = (url?: string|null): string => url || '#';
  const checkTarget = (url?: string|null): string => (url ? '_blank' : '_self');

  const owlClass = 'o-footer';

  if (!data.instagram_logo.content
    && !data.pinterest_logo.content
    && !data.twitter_logo.content
    && !data.facebook_logo.content) { return <></>; }

  return (
    <div className={`${owlClass}-social`}>
      <List modifiers={['icon']}>
        {data.instagram_logo.content && (
        <li onMouseEnter={toggleHoverInstagram} onMouseLeave={toggleHoverInstagram}>
          <Link
            useRouterLink
            target={checkTarget(data.instagram_url.content)}
            href={checkLink(data.instagram_url.content)}
          >
            <span className={`${owlClass}-social-wrap`}>
              <Image src={cmsHttp + data.instagram_logo.content} alt="icon social" />
            </span>
          </Link>
        </li>
        )}
        {data.pinterest_logo.content && (
        <li onMouseEnter={toggleHoverPinterest} onMouseLeave={toggleHoverPinterest}>
          <Link
            useRouterLink
            target={checkTarget(data.pinterest_url.content)}
            href={checkLink(data.pinterest_url.content)}
          >
            <span className={`${owlClass}-social-wrap`}>
              <Image src={cmsHttp + data.pinterest_logo.content} alt="icon social" />
            </span>
          </Link>
        </li>
        )}
        {data.twitter_logo.content && (
        <li onMouseEnter={toggleHoverTwitter} onMouseLeave={toggleHoverTwitter}>
          <Link
            useRouterLink
            target={checkTarget(data.twitter_url.content)}
            href={checkLink(data.twitter_url.content)}
          >
            <span className={`${owlClass}-social-wrap`}>
              <Image src={cmsHttp + data.twitter_logo.content} alt="icon social" />
            </span>
          </Link>
        </li>
        )}
        {data.facebook_logo.content && (
        <li onMouseEnter={toggleHoverFacebook} onMouseLeave={toggleHoverFacebook}>
          <Link
            useRouterLink
            target={checkTarget(data.facebook_url.content)}
            href={checkLink(data.facebook_url.content)}
          >
            <span className={`${owlClass}-social-wrap`}>
              <Image src={cmsHttp + data.facebook_logo.content} alt="icon social" />
            </span>
          </Link>
        </li>
        )}
      </List>
    </div>
  );
};

const LogoFooter: React.FC<ChildFooterProps> = ({
  data,
}) => {
  const owlClass = 'o-footer';
  if (!data.footer_logo.content) {
    return <></>;
  }
  return (
    <div className={`${owlClass}-logo`}>
      <div className={`${owlClass}-logo-pc`}>
        <Link
          useRouterLink
          href="/"
        >
          <Image src={cmsHttp + data.footer_logo.content} alt="Patf Logo" />
        </Link>
      </div>
      <div className={`${owlClass}-logo-mobile`}>
        <Link
          useRouterLink
          href="/"
        >
          <Image src={cmsHttp + data.footer_logo.content} alt="Patf Logo" />
        </Link>
      </div>
    </div>
  );
};
const Footer: React.FC = () => {
  const { t } = useTranslation('header');
  const owlClass = 'o-footer';

  const { data } = useSelector((state) => state.system);

  return (
    <footer className={`${owlClass}`}>
      <div className={`${owlClass}-top`}>
        {data && <LogoFooter data={data} />}
        <div className={`${owlClass}-menu`}>
          <List modifiers={['horizontal']}>
            <li>
              <Link
                useRouterLink
                href="/"
              >
                {t('home').toUpperCase()}
              </Link>
            </li>
            <li>
              <Link
                useRouterLink
                href="/contact"
              >
                {t('contact').toUpperCase()}
              </Link>
            </li>
          </List>
        </div>
        {data && <ListSocial data={data} />}
        {
        data && data.copyright.content
          && (
          <div className={`${owlClass}-text`}>
            {data.copyright.content}
          </div>
          )
        }
      </div>
    </footer>
  );
};

export default Footer;


import React from 'react';
import { Link as RouterLink } from 'react-router-dom';

import mapModifiers from 'function/mapModifier';

interface LinkProps {
  rel?: string;
  target?: string;
  href: string;
  children: React.ReactNode;
  modifier?: ('text-underline'|'white'|'fs-small')[];
  useRouterLink?: boolean;
}

const Link: React.FC<LinkProps> = ({
  href,
  children,
  modifier,
  target,
  rel,
  useRouterLink,
}) => {
  const owlClass = 'a-link';
  if (useRouterLink && !href.includes('http')) {
    return (
      <RouterLink className={mapModifiers(owlClass, modifier)} to={href} rel={rel} target={target}>
        {children}
      </RouterLink>
    );
  }
  return (
    <a target={target} rel={rel} href={href} className={mapModifiers(owlClass, modifier)}>
      {children}
    </a>
  );
};

export default Link;
