import React, { forwardRef } from 'react';
import DatePicker, { ReactDatePickerProps } from 'react-datepicker';
import getYear from "date-fns/getYear";
import getMonth from "date-fns/getYear";



interface InputDatePickerProps
    extends React.InputHTMLAttributes<HTMLInputElement> {}

const InputDatePicker = forwardRef<HTMLInputElement, InputDatePickerProps>(
    ({ ...props }, ref) => (
        <div>
            <span onClick={props.onClick}>icon</span>
            <input
                ref={ref}
                {...props}
                placeholder={props.value ? undefined : 'dd/MM/yyyy'}
            />
        </div>
    )
);

const CustomHeader:ReactDatePickerProps['renderCustomHeader']=({
    date,
    changeYear,
    changeMonth,
    decreaseMonth,
    increaseMonth,
    prevMonthButtonDisabled,
    nextMonthButtonDisabled,
  })=>{
    const range = (start:any, end:any) => {
        return new Array(end - start).fill('').map((d, i) => i + start);
    };
    const years = range(1990, getYear(new Date()));
    const months = [
        "January",
        "February",
        "March",
        "April",
        "May",
        "June",
        "July",
        "August",
        "September",
        "October",
        "November",
        "December",
    ];
      return(
    <div
    style={{
      margin: 10,
      display: "flex",
      justifyContent: "center",
    }}
  >
    <button onClick={decreaseMonth} disabled={prevMonthButtonDisabled}>
      {"<"}
    </button>
    <select
      value={getYear(date)}
      onChange={({ target: { value } }) => changeYear(Number(value))}
    >
      {years.map((option) => (
        <option key={option} value={option}>
          {option}
        </option>
      ))}
    </select>

    <select
      value={months[getMonth(date)]}
      onChange={({ target: { value } }) =>
        changeMonth(months.indexOf(value))
      }
    >
      {months.map((option) => (
        <option key={option} value={option}>
          {option}
        </option>
      ))}
    </select>

    <button onClick={increaseMonth} disabled={nextMonthButtonDisabled}>
      {">"}
    </button>
  </div>
)}

interface InputPickerProps extends ReactDatePickerProps {}

const InputPicker: React.FC<InputPickerProps> = ({ ...props }) => {
    return (
        <DatePicker
            {...props}
            customInput={<InputDatePicker />}
            renderCustomHeader={CustomHeader}
        />
    );
};

export default InputPicker;

