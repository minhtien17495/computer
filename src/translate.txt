import React from 'react';
import mapModifiers from 'variables/functions';
import './index.scss';

interface props {
    child?: React.ReactNode;
    isChild?: boolean;
    arrow?: boolean;
    href?: string;
}

const MenuItem: React.FC<props> = ({ children, child, isChild, arrow, href }) => {
    return (
        <li
            className={mapModifiers(
                'a-menuItem',
                isChild && 'isChild',
                arrow && 'hasArrow',
                child ? 'hasChild' : undefined,
                // active ? 'active' : undefined,
            )}
        >
            <div className="a-menuItem_wrapLinkArrow">
                {href ?
                    <a className="a-menuItem_link" href="/">
                        {children}
                    </a> :
                    <span className="a-menuItem_link">
                        {children}
                    </span>
                }
                {arrow && <span className="a-menuItem_arrow" />}
            </div>
            {
                child && (
                    <div className="a-menuItem_wrapSubMenu">
                        <ul className="a-menuItem_subMenu">
                            {child}
                        </ul>
                    </div>
                )
            }
        </li>
    )
}

export default MenuItem;

ul,li,a{
    margin:0;
    padding:0;
    text-decoration: none;
}
.a-menuItem{
    $root:&;
    list-style: none;
    display: inline-block;
    // padding-right: 20px;
    position: relative;
    white-space: nowrap;
    
    &:hover{
        >#{$root}_wrapLinkArrow #{$root}_link{
            color: rosybrown;
        }

        >#{$root}_wrapLinkArrow #{$root}_arrow::before{
            transform: rotate(90deg);
        }

        >#{$root}_wrapSubMenu{
            opacity: 1;
            visibility: visible;
            transform: translateY(0);
            @media only screen and (max-width: 767px) {
                max-height: 300px;
            }
        }
    }

    &_wrapLinkArrow{
        display: flex;
        align-items: center;
        @media only screen and (max-width: 767px) {
            justify-content: space-between;
        }
    }

    &_link{
        color: black;
        font-size: 16px;
        line-height: 24px;
        cursor: pointer;
    }

    &_arrow{
        display: inline-block;
        width: 14px;
        height: 14px;
        position: relative;
        margin-left: 10px;
        @media only screen and (max-width: 767px) {
            top: 0;
            transform: translateY(0);
        }
        &:before {
            content: '';
            position: absolute;
            width: 100%;
            height: 100%;
            background-image: url(~assets/icons/icon_arrow_next_black.svg);
            background-position: center;
            background-size: contain;
            background-repeat: no-repeat;
            transition: all 0.3s linear;
        }
    }

    &-isChild{
        min-width: 150px;
        display: block;
        padding-top: 10px;
        padding-bottom: 10px;
        > #{$root}_wrapSubMenu{
            padding-top: 0;
            top: 0;
            left: calc(100% + 10px);
            transform: translateY(0);
            @media only screen and (max-width: 767px) {
                left: 0;
            }
        }
    }

    &_wrapSubMenu{
        padding-top: 24px;
        position: absolute;
        top: 100%;
        left: 0;
        transition: all 0.3s linear;
        opacity: 0;
        visibility: hidden;
        transform: translateY(-30%);
        @media only screen and (max-width: 767px) {
            position: relative;
            padding-top: 0;
            top: auto;
            left: auto;
            opacity: 0;
            max-height: 0;
            visibility: hidden;
            transform: translateY(0);
        }
    }

    &_subMenu{
        padding-left: 10px;
        padding-right: 10px;
        background-color: rgba(128, 128, 128, 0.308);
        @media only screen and (max-width: 767px) {
            background-color: transparent;
        }
    }

}
