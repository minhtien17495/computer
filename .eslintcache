[{"/FontEnd/ReactJs/thanhdanh/src/pages/home/index.tsx":"1","/FontEnd/ReactJs/thanhdanh/src/components/organisms/infoCardCarousel/index.tsx":"2","/FontEnd/ReactJs/thanhdanh/src/variables/functions.ts":"3","/FontEnd/ReactJs/thanhdanh/src/components/atoms/image/index.tsx":"4","/FontEnd/ReactJs/thanhdanh/src/scripts/home.ts":"5","/FontEnd/ReactJs/thanhdanh/src/scripts/carousel.ts":"6","/FontEnd/ReactJs/thanhdanh/src/scripts/index.ts":"7","/FontEnd/ReactJs/thanhdanh/src/scripts/map.ts":"8","/FontEnd/ReactJs/thanhdanh/src/index.tsx":"9","/FontEnd/ReactJs/thanhdanh/src/App.tsx":"10","/FontEnd/ReactJs/thanhdanh/src/components/organisms/CenterCarousel/index.tsx":"11","/FontEnd/ReactJs/thanhdanh/src/components/templates/SvgClick/index.tsx":"12","/FontEnd/ReactJs/thanhdanh/src/scripts/svg.ts":"13"},{"size":954,"mtime":1609342880259,"results":"14","hashOfConfig":"15"},{"size":2436,"mtime":1606630443051,"results":"16","hashOfConfig":"15"},{"size":466,"mtime":1606592339668,"results":"17","hashOfConfig":"15"},{"size":424,"mtime":1606593673925,"results":"18","hashOfConfig":"15"},{"size":36,"mtime":1606594159340,"results":"19","hashOfConfig":"15"},{"size":1102,"mtime":1608734231521,"results":"20","hashOfConfig":"15"},{"size":94,"mtime":1609166958202,"results":"21","hashOfConfig":"15"},{"size":9634,"mtime":1608221898339,"results":"22","hashOfConfig":"15"},{"size":240,"mtime":1606591724233,"results":"23","hashOfConfig":"15"},{"size":165,"mtime":1606592623792,"results":"24","hashOfConfig":"15"},{"size":1709,"mtime":1608734730446,"results":"25","hashOfConfig":"15"},{"size":12178,"mtime":1609345536667,"results":"26","hashOfConfig":"15"},{"size":3221,"mtime":1609346195179,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"p800x0",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"41"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/FontEnd/ReactJs/thanhdanh/src/pages/home/index.tsx",[],"/FontEnd/ReactJs/thanhdanh/src/components/organisms/infoCardCarousel/index.tsx",[],["57","58"],"/FontEnd/ReactJs/thanhdanh/src/variables/functions.ts",[],"/FontEnd/ReactJs/thanhdanh/src/components/atoms/image/index.tsx",[],"/FontEnd/ReactJs/thanhdanh/src/scripts/home.ts",[],"/FontEnd/ReactJs/thanhdanh/src/scripts/carousel.ts",[],["59","60"],"/FontEnd/ReactJs/thanhdanh/src/scripts/index.ts",[],"/FontEnd/ReactJs/thanhdanh/src/scripts/map.ts",["61"],"import $ from 'jquery';\n// import {} from 'googlemaps';\n$(() => {\n    // let map: google.maps.Map;\n    // const center: google.maps.LatLngLiteral = { lat: 30, lng: -110 };\n\n    // function initMap(): void {\n    //     map = new google.maps.Map(document.getElementById(\"map\") as HTMLElement, {\n    //         center,\n    //         zoom: 8\n    //     });\n    //     initMap();\n    // }\n    // function initMap() {\n    //                 // The location\n    //                 // const location = { lat: 10.807230, lng: 106.683330 };\n    //                 // The map, centered at Uluru\n    //     var mapOptions = {\n    //         center: new google.maps.LatLng(10.807230,106.683330), //đối tượng vị trí, map sẽ hiển thị vị trí này\n    //         zoom: 17,  //độ phóng\n    //         mapTypeId: google.maps.MapTypeId.ROADMAP,  //loại bản đồ chuẩn mặc định\n    //         // scaleControl: false, // loại các button hiện trên map\n    //         // streetViewControl: false, // loại các button hiện trên map\n    //         // fullscreenControl: false, // loại các button hiện trên map\n    //         disableDefaultUI: true,// loại các button hiện trên map\n    //       };\n    //     const map = new google.maps.Map(document.getElementById(\"map\") as HTMLElement,mapOptions);\n    //                     // The marker, positioned at lacation\n    //                     // const marker = new google.maps.Marker({\n    //                     //     position: location,\n    //                     //     map: map,\n    //                     // });\n    //     const marker2 = new google.maps.Marker({\n    //         position: { lat: 10.805870, lng: 106.685460 },\n    //         map: map,\n    //         title:'250 nguyen thuong hien',\n    //         icon:'icons/icon_add_photo.svg'\n    //     });\n\n\n    //     const marker = new google.maps.Marker({\n    //         position: map.getCenter(),  //vị trí nút\n    //         map: map,   //áp dụng cho đối tượng bản đồ trên.\n    //         title: 'Khu vực thanh xuân' //alt khi mouseover vào nút, cách khác: marker.setTitle('abc')\n    //       });\n    //     //   map.addOverlay(marker2);\n    // }\n    // initMap();\n\n    // Array Maker\n    let map: google.maps.Map;\n    function initMap() {\n        map = new google.maps.Map(document.getElementById(\"map\") as HTMLElement, {\n            center: new google.maps.LatLng(-33.91722, 151.23064),\n            zoom: 16,\n            disableDefaultUI: true,\n            scaleControl: false, // loại các button hiện trên map\n            streetViewControl: false, // loại các button hiện trên map\n            fullscreenControl: false,\n        });\n\n        const iconBase =\n            \"https://developers.google.com/maps/documentation/javascript/examples/full/images/\";\n\n        const icons: Record<string, { icon: string }> = {\n            parking: {\n                icon: iconBase + \"parking_lot_maps.png\",\n            },\n            library: {\n                icon: iconBase + \"library_maps.png\",\n            },\n            info: {\n                icon: iconBase + \"info-i_maps.png\",\n            },\n        };\n\n        const features = [\n            {\n                position: new google.maps.LatLng(-33.91721, 151.2263),\n                type: \"info\",\n            },\n            {\n                position: new google.maps.LatLng(-33.91539, 151.2282),\n                type: \"info\",\n            },\n            {\n                position: new google.maps.LatLng(-33.91747, 151.22912),\n                type: \"info\",\n            },\n            {\n                position: new google.maps.LatLng(-33.9191, 151.22907),\n                type: \"info\",\n            },\n            {\n                position: new google.maps.LatLng(-33.91725, 151.23011),\n                type: \"info\",\n            },\n            {\n                position: new google.maps.LatLng(-33.91872, 151.23089),\n                type: \"info\",\n            },\n            {\n                position: new google.maps.LatLng(-33.91784, 151.23094),\n                type: \"info\",\n            },\n            {\n                position: new google.maps.LatLng(-33.91682, 151.23149),\n                type: \"info\",\n            },\n            {\n                position: new google.maps.LatLng(-33.9179, 151.23463),\n                type: \"info\",\n            },\n            {\n                position: new google.maps.LatLng(-33.91666, 151.23468),\n                type: \"info\",\n            },\n            {\n                position: new google.maps.LatLng(-33.916988, 151.23364),\n                type: \"info\",\n            },\n            {\n                position: new google.maps.LatLng(-33.91662347903106, 151.22879464019775),\n                type: \"parking\",\n            },\n            {\n                position: new google.maps.LatLng(-33.916365282092855, 151.22937399734496),\n                type: \"parking\",\n            },\n            {\n                position: new google.maps.LatLng(-33.91665018901448, 151.2282474695587),\n                type: \"parking\",\n            },\n            {\n                position: new google.maps.LatLng(-33.919543720969806, 151.23112279762267),\n                type: \"parking\",\n            },\n            {\n                position: new google.maps.LatLng(-33.91608037421864, 151.23288232673644),\n                type: \"parking\",\n            },\n            {\n                position: new google.maps.LatLng(-33.91851096391805, 151.2344058214569),\n                type: \"parking\",\n            },\n            {\n                position: new google.maps.LatLng(-33.91818154739766, 151.2346203981781),\n                type: \"parking\",\n            },\n            {\n                position: new google.maps.LatLng(-33.91727341958453, 151.23348314155578),\n                type: \"library\",\n            },\n        ];\n\n        // Create markers.\n        for (let i = 0; i < features.length; i++) {\n            const marker = new google.maps.Marker({\n                position: features[i].position,\n                icon: icons[features[i].type].icon,\n                map: map,\n            });\n        }\n    }\n\n    // POPUP\n    //   let map: google.maps.Map, popup, Popup;\n\n    //   /** Initializes the map and the custom popup. */\n    //   function initMap(): void {\n    //     map = new google.maps.Map(document.getElementById(\"map\") as HTMLElement, {\n    //       center: { lat: -33.9, lng: 151.1 },\n    //       zoom: 10,\n    //     });\n\n    //     /**\n    //      * A customized popup on the map.\n    //      */\n    //     class Popup extends google.maps.OverlayView {\n    //       position: google.maps.LatLng;\n    //       containerDiv: HTMLDivElement;\n\n    //       constructor(position: google.maps.LatLng, content: HTMLElement) {\n    //         super();\n    //         this.position = position;\n\n    //         content.classList.add(\"popup-bubble\");\n\n    //         // This zero-height div is positioned at the bottom of the bubble.\n    //         const bubbleAnchor = document.createElement(\"div\");\n    //         bubbleAnchor.classList.add(\"popup-bubble-anchor\");\n    //         bubbleAnchor.appendChild(content);\n\n    //         // This zero-height div is positioned at the bottom of the tip.\n    //         this.containerDiv = document.createElement(\"div\");\n    //         this.containerDiv.classList.add(\"popup-container\");\n    //         this.containerDiv.appendChild(bubbleAnchor);\n\n    //         // Optionally stop clicks, etc., from bubbling up to the map.\n    //         Popup.preventMapHitsAndGesturesFrom(this.containerDiv);\n    //       }\n\n    //       /** Called when the popup is added to the map. */\n    //       onAdd() {\n    //         this.getPanes().floatPane.appendChild(this.containerDiv);\n    //       }\n\n    //       /** Called when the popup is removed from the map. */\n    //       onRemove() {\n    //         if (this.containerDiv.parentElement) {\n    //           this.containerDiv.parentElement.removeChild(this.containerDiv);\n    //         }\n    //       }\n\n    //       /** Called each frame when the popup needs to draw itself. */\n    //       draw() {\n    //         const divPosition = this.getProjection().fromLatLngToDivPixel(\n    //           this.position\n    //         );\n\n    //         // Hide the popup when it is far out of view.\n    //         const display =\n    //           Math.abs(divPosition.x) < 4000 && Math.abs(divPosition.y) < 4000\n    //             ? \"block\"\n    //             : \"none\";\n\n    //         if (display === \"block\") {\n    //           this.containerDiv.style.left = divPosition.x + \"px\";\n    //           this.containerDiv.style.top = divPosition.y + \"px\";\n    //         }\n\n    //         if (this.containerDiv.style.display !== display) {\n    //           this.containerDiv.style.display = display;\n    //         }\n    //       }\n    //     }\n\n    //     popup = new Popup(\n    //       new google.maps.LatLng(-33.866, 151.196),\n    //       document.getElementById(\"content\") as HTMLElement\n    //     );\n    //     popup.setMap(map);\n    //   }\n\n\n    let googleMapsUrl = \"//maps.google.com/maps/api/js?libraries=places&key=AIzaSyAuqtG8XhmKQPGoYpFi9dqZmhZTDWGCxE0\"\n\n    function addMapsScript() {\n        if (!document.querySelectorAll(`[src=\"${googleMapsUrl}\"]`).length) {\n            document.body.appendChild(Object.assign(\n                document.createElement('script'), {\n                type: 'text/javascript',\n                src: googleMapsUrl,\n                onload: () => initMap()\n            }));\n        } else {\n            initMap();\n        }\n    }\n    addMapsScript();\n})\n","/FontEnd/ReactJs/thanhdanh/src/index.tsx",[],"/FontEnd/ReactJs/thanhdanh/src/App.tsx",[],"/FontEnd/ReactJs/thanhdanh/src/components/organisms/CenterCarousel/index.tsx",[],"/FontEnd/ReactJs/thanhdanh/src/components/templates/SvgClick/index.tsx",[],"/FontEnd/ReactJs/thanhdanh/src/scripts/svg.ts",[],{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"62","replacedBy":"66"},{"ruleId":"64","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":158,"column":19,"nodeType":"70","messageId":"71","endLine":158,"endColumn":25},"no-native-reassign",["72"],"no-negated-in-lhs",["73"],["72"],["73"],"@typescript-eslint/no-unused-vars","'marker' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]